import fetch from "node-fetch";

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("- ใ๐ใูู ุชุชููุน ุฅูู ูุฎุชุฑุน Neuralink ูุฃูุฑุฃ ุฃููุงุฑูุ ุงูุชุจ ุดูุฆูุง ุจุนุฏ ุงูุฃูุฑ.\nูุซุงู:\nโฃ .ุงูููู ูุณุชูุจู ุงูุฐูุงุก ุงูุงุตุทูุงุนูุ โฃ");

  await m.reply("... Processing like a Tesla autopilot.");

  try {
    let result = await CleanDx(text);
    await m.reply(`*โฎโโโโโโโโช๐โซโโโโโโโโ*\nใ ๐ ใ${result}\n*โฏโโโโโโโโช๐โซโโโโโโโโ*`);
  } catch (e) {
    await m.reply("ใ ๐ ใุญุชู ุฅูููู ูุง ููู ุณุคุงููุ ุญุงูู ูู ุฌุฏูุฏ.");
  }
};

handler.help = ["dx"];
handler.tags = ["ai"];
handler.command = /^(ุงูููู|elon)$/i;

export default handler;

async function CleanDx(your_qus) {
  let Baseurl = "https://alakreb.vercel.app/api/ai/gpt?q=";

  // ุฃุณููุจ ุฅูููู ูุงุณู
  let prompt = `ุฃูุช ุฅูููู ูุงุณูุ ุฑุฌู ุฃุนูุงู ุนุจูุฑูุ ูุคุณุณ ุณุจูุณ ุฅูุณ ูุชุณูุง ููููุฑุงูููู. ุฑุฏ ุนูู ุงูุฃุณุฆูุฉ ุจุฃุณููุจู ุงูุฐููุ ุงูุณุงุฎุฑ ุฃุญูุงููุงุ ูุงููููุก ุจุงูุฃููุงุฑ ุงููุณุชูุจููุฉ ูุงููุงูุนูุฉ ุงูุนูููุฉ. ูู ูุจุงุดุฑูุง ููุง ุชุฎู ูู ุงูุฅุฏูุงุก ุจุฑุฃูู. ุณุคุงูู ูู: ${your_qus}`;

  let response = await fetch(Baseurl + encodeURIComponent(prompt));
  let data = await response.json();
  return data.message;
}