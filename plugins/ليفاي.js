import fetch from "node-fetch";

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("- ใโ๏ธใ ูู ุชุธู ุฃููู ุฃูุฑุฃ ุงูุนูููุ ุงูุชุจ ุดูุฆูุง ุจุนุฏ ุงูุฃูุฑ.\nูุซุงู:\nโฃ .ูููุงู ุงูุถู ุงููู ุญุชู ุงูุขู โฃ\n*.ูููุงู* ุงูุชุจ ุฑูุฒ JS");

  await m.reply("... ูุงููุง ูู ุฅุถุงุนุฉ ููููุชุ ุงูุชุธุฑ.");

  try {
    let result = await CleanDx(text);
    await m.reply(`*โฎโโโโโโโโช๐ธโซโโโโโโโโ*\nใ โ๏ธ ใ${result}\n*โฏโโโโโโโโช๐ธโซโโโโโโโโ*`);
  } catch (e) {
    await m.reply("ใ โ๏ธ ใุชุงูู... ุญุชู ุงูู AI ูุง ูุฑูุฏ ุงูุฑุฏ ุนููู.");
  }
};

handler.help = ["dx"];
handler.tags = ["ai"];
handler.command = /^(ูููุงู)$/i;

export default handler;

async function CleanDx(your_qus) {
  let Baseurl = "https://alakreb.vercel.app/api/ai/gpt?q=";
  
  // ููุง ูุถูู ุชูุฌูู ูู API ุจุฃู ุงูุฑุฏ ูุฌุจ ุฃู ูููู ุจุฃุณููุจ ูููุงู
  let prompt = `ุฃูุช ูููุงู ูู ูุฌูู ุงูุนูุงููุฉุ ุชุญุฏุซ ููุง ูู ุฃูู ูููุงู. ุฑุฏ ููุท ุจุทุฑููุฉ ูููุงู ุงููุงุณูุฉ ูุงูุจุงุฑุฏุฉ. ุณุคุงูู ูู: ${your_qus}`;

  let response = await fetch(Baseurl + encodeURIComponent(prompt)); // ุฅุฑุณุงู ุงููุต ุงููุญุณู ุฅูู ุงูู API
  let data = await response.json();
  return data.message; // ูุฐู ูู ุงูุฑุณุงูุฉ ูู ุงูู API
}