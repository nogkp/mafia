import fetch from "node-fetch";

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("- ใ๐ใ ูู ุชุธู ุฃููู ุฃูุฑุฃ ุงูุนูููุ ุงูุชุจ ุดูุฆูุง ุจุนุฏ ุงูุฃูุฑ.\nูุซุงู:\nโฃ .ุฏููู ุงูุถู ุงููู โฃ\n*.ุฏููู* ุงูุชุจ ุฑูุฒ JS");

  await m.reply("... ุงูุชุธุฑ ูุญุธุฉุ ุณุฃุจุญุซ ูู ุนู ุฃูุถู ุงูุฅุฌุงุจุงุช.");

  try {
    let result = await CleanDx(text);
    await m.reply(`*โฎโโโโโโโ๐ฌโโโโโโโ๐ฅ*\nใ ๐ ใ${result}\n*โฏโโโโโโโ๐ฌโโโโโโโ๐ฅ*`);
  } catch (e) {
    await m.reply("ใ ๐ ใุฃุนุชุฐุฑุ ูู ุฃุชููู ูู ุงูุญุตูู ุนูู ุงููุนูููุงุช.");
  }
};

handler.help = ["ุฏููู"];
handler.tags = ["ai"];
handler.command = /^(ุฏููู)$/i;

export default handler;

async function CleanDx(your_qus) {
  let Baseurl = "https://alakreb.vercel.app/api/ai/gpt?q=";
  
  // ุชูุฌูู ุงูู API ููููู ุฏููู ุดุงูู ูุนุฑู ูู ุดูุก ุนู ุงูุฃูููุ ุงููุณูุณูุงุชุ ุงููุฑุชููุ ุงูุฃููุงูุ ุงููุงูููุง ููู ุดูุก ุชุฑูููู
  let prompt = `ุฃูุช ุฏููู ุดุงูู ููู ุดูุก ูุชุนูู ุจุงูุชุฑููู. ูุฌุจ ุฃู ุชููู ูุงุฏุฑูุง ุนูู ุชูุฏูู ูุนูููุงุช ุนู ุงูุฃูููุ ุงููุณูุณูุงุชุ ุงููุฑุชููุ ุงูุฃููุงูุ ุงููุงูููุง ููู ุฃููุงุน ุงูุชุฑููู. ุณุคุงูู ูู: ${your_qus}`;

  let response = await fetch(Baseurl + encodeURIComponent(prompt)); // ุฅุฑุณุงู ุงููุต ุงููุญุณู ุฅูู ุงูู API
  let data = await response.json();
  return data.message; // ูุฐู ูู ุงูุฑุณุงูุฉ ูู ุงูู API
}